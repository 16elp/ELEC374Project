//Instruction: 00800055 // ld r1, 85						Reg_load1a: begin				Mdatain <= 32'h00000000;     //Data to be inserted into R2				MDR_enable <= 1; MDR_read<=3'd2;				#15 MDR_enable <= 0;MDR_read<=3'd0;			end						Reg_load1b: begin    				MDRout <= 1; R0_R15_enable<=16'h0001; //to enable R2 				#15 MDRout <= 0; R0_R15_enable<= 16'd0;			end//			//			Reg_load2a: begin//			   	Mdatain <= 32'h0000000F;      //Data to be inserted into R4//			  	MDR_enable <= 1;MDR_read<=3'd2;//				#15 MDR_enable <= 0;MDR_read<=3'd0;//			end//			//			Reg_load2b: begin//				MDRout <= 1; R0_R15_enable<=16'h0010;  //enable R4    //				#15 MDRout <= 0; R0_R15_enable<= 16'd0;//			end						Reg_load3a: begin				Mdatain <= 32'h00000000;   			   MDR_enable <= 1;MDR_read<=3'd2;				#15 MDR_enable <= 0;MDR_read<=3'd0; //Load PC with what is in RAM at location Zero			end						Reg_load3b: begin				MDRout <= 1; PC_enable<=1;     //whatever you enable must be disbled 15 time units after				#15 MDRout <= 0; PC_enable<=0;			end						T0: begin 				PCout <= 1; MAR_enable <= 1; 				#15 PCout <= 0; MAR_enable <= 0; 			end						T1: begin			   MDR_enable <= 1; MDR_read<=3'd1;   //Loads MDR from RAM output				#15 MDR_enable <= 0; MDR_read<=3'd0;						end						T2: begin				MDRout <= 1; IR_enable <= 1;				#15 MDRout <= 0; IR_enable <= 0;						end						T3: begin				Grb<=1;BAout<=1;Y_enable<=1;				#15 Grb<=0;BAout<=0;Y_enable<=0;			end						T4: begin				Cout<=1;Z_enable <= 1;				#15 Cout<=0;Z_enable <= 0;			end						T5: begin			   ZLowout <= 1; MAR_enable <= 1; 				#15 ZLowout <= 0; MAR_enable <= 0;			end						T6: begin			   MDR_read<=3'd1; MDR_enable <= 1;				#15 MDR_read<=3'd0; MDR_enable <= 0;			end						T7: begin			   MDRout <= 1; Gra <= 1; R_enable <= 1;				#15 MDRout <= 0; Gra <= 1; R_enable <= 0; Rout <= 1;			end